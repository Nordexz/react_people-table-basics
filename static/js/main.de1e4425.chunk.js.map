{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","selectedSlug","findParent","ArrayOfPeople","parent","find","user","map","born","died","motherName","fatherName","mother","father","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","setPeople","useParams","useEffect","getPeopleFromTheServer","peopleFromTheServer","length","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.de1e4425.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[]\n  selectedSlug: string;\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedSlug }) => {\n  const findParent = (\n    ArrayOfPeople: Person[],\n    parent: string | null,\n  ):Person | null => {\n    return ArrayOfPeople.find(user => user.name === parent) || null;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n            slug,\n          } = person;\n\n          const mother = findParent(people, motherName);\n          const father = findParent(people, fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': slug === selectedSlug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : motherName || '-'}\n              </td>\n\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from '../Loader/Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getPeopleFromTheServer = async () => {\n      try {\n        const peopleFromTheServer = await getPeople();\n\n        setPeople(peopleFromTheServer);\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getPeopleFromTheServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!people.length && !isLoading && !isError) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length\n            && <PeopleTable people={people} selectedSlug={slug} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport React from 'react';\nimport classNames from 'classnames';\nimport {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"people\"\n              className={({ isActive }) => (classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              ))}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}